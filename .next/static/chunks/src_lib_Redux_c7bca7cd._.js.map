{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Programming/sportsexcitement-react/src/lib/Redux/auth/slices/authSlice.ts"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport { AuthState } from '@/hooks/auth/IAuth';\r\nimport { \r\n  loginAction, \r\n  registerAction, \r\n  logoutAction, \r\n  resetPasswordRequestAction, \r\n  resetPasswordAction \r\n} from '../actions/authActions';\r\n\r\nconst initialState: AuthState = {\r\n  idToken: null,\r\n  refreshToken: null,\r\n  loading: false,\r\n  error: null,\r\n  sessionId: null,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(loginAction.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(loginAction.fulfilled, (state, action: any) => {\r\n        state.loading = false;\r\n        state.idToken = action.payload.idToken;\r\n        state.refreshToken = action.payload.refreshToken;\r\n        state.error = null;\r\n      })\r\n      .addCase(loginAction.rejected, (state, action: any) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      })\r\n      .addCase(registerAction.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(registerAction.fulfilled, (state, action: any) => {\r\n        state.loading = false;\r\n        state.idToken = action.payload.idToken;\r\n        state.refreshToken = action.payload.refreshToken;\r\n        state.error = null;\r\n      })\r\n      .addCase(registerAction.rejected, (state, action: any) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      })\r\n      .addCase(logoutAction.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(logoutAction.fulfilled, (state) => {\r\n        state.loading = false;\r\n        state.idToken = null;\r\n        state.refreshToken = null;\r\n        state.error = null;\r\n      })\r\n      .addCase(logoutAction.rejected, (state, action: any) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      })\r\n      .addCase(resetPasswordRequestAction.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(resetPasswordRequestAction.fulfilled, (state) => {\r\n        state.loading = false;\r\n        state.error = null;\r\n      })\r\n      .addCase(resetPasswordRequestAction.rejected, (state, action: any) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      })\r\n      .addCase(resetPasswordAction.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(resetPasswordAction.fulfilled, (state, action: any) => {\r\n        state.loading = false;\r\n        state.idToken = action.payload.idToken;\r\n        state.refreshToken = action.payload.refreshToken;\r\n        state.error = null;\r\n      })\r\n      .addCase(resetPasswordAction.rejected, (state, action: any) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport default authSlice.reducer;\r\nexport { \r\n  loginAction, \r\n  registerAction, \r\n  logoutAction, \r\n  resetPasswordRequestAction, \r\n  resetPasswordAction \r\n};\r\n"],"names":[],"mappings":";;;AAAA;;;;;;;;AAUA,MAAM,eAA0B;IAC9B,SAAS;IACT,cAAc;IACd,SAAS;IACT,OAAO;IACP,WAAW;AACb;AAEA,MAAM,YAAY,CAAA,GAAA,8LAAA,CAAA,cAAW,AAAD,EAAE;IAC5B,MAAM;IACN;IACA,UAAU,CAAC;IACX,eAAe,CAAC;QACd,QACG,OAAO,CAAC,YAAY,OAAO,EAAE,CAAC;YAC7B,MAAM,OAAO,GAAG;YAChB,MAAM,KAAK,GAAG;QAChB,GACC,OAAO,CAAC,YAAY,SAAS,EAAE,CAAC,OAAO;YACtC,MAAM,OAAO,GAAG;YAChB,MAAM,OAAO,GAAG,OAAO,OAAO,CAAC,OAAO;YACtC,MAAM,YAAY,GAAG,OAAO,OAAO,CAAC,YAAY;YAChD,MAAM,KAAK,GAAG;QAChB,GACC,OAAO,CAAC,YAAY,QAAQ,EAAE,CAAC,OAAO;YACrC,MAAM,OAAO,GAAG;YAChB,MAAM,KAAK,GAAG,OAAO,OAAO;QAC9B,GACC,OAAO,CAAC,eAAe,OAAO,EAAE,CAAC;YAChC,MAAM,OAAO,GAAG;YAChB,MAAM,KAAK,GAAG;QAChB,GACC,OAAO,CAAC,eAAe,SAAS,EAAE,CAAC,OAAO;YACzC,MAAM,OAAO,GAAG;YAChB,MAAM,OAAO,GAAG,OAAO,OAAO,CAAC,OAAO;YACtC,MAAM,YAAY,GAAG,OAAO,OAAO,CAAC,YAAY;YAChD,MAAM,KAAK,GAAG;QAChB,GACC,OAAO,CAAC,eAAe,QAAQ,EAAE,CAAC,OAAO;YACxC,MAAM,OAAO,GAAG;YAChB,MAAM,KAAK,GAAG,OAAO,OAAO;QAC9B,GACC,OAAO,CAAC,aAAa,OAAO,EAAE,CAAC;YAC9B,MAAM,OAAO,GAAG;YAChB,MAAM,KAAK,GAAG;QAChB,GACC,OAAO,CAAC,aAAa,SAAS,EAAE,CAAC;YAChC,MAAM,OAAO,GAAG;YAChB,MAAM,OAAO,GAAG;YAChB,MAAM,YAAY,GAAG;YACrB,MAAM,KAAK,GAAG;QAChB,GACC,OAAO,CAAC,aAAa,QAAQ,EAAE,CAAC,OAAO;YACtC,MAAM,OAAO,GAAG;YAChB,MAAM,KAAK,GAAG,OAAO,OAAO;QAC9B,GACC,OAAO,CAAC,2BAA2B,OAAO,EAAE,CAAC;YAC5C,MAAM,OAAO,GAAG;YAChB,MAAM,KAAK,GAAG;QAChB,GACC,OAAO,CAAC,2BAA2B,SAAS,EAAE,CAAC;YAC9C,MAAM,OAAO,GAAG;YAChB,MAAM,KAAK,GAAG;QAChB,GACC,OAAO,CAAC,2BAA2B,QAAQ,EAAE,CAAC,OAAO;YACpD,MAAM,OAAO,GAAG;YAChB,MAAM,KAAK,GAAG,OAAO,OAAO;QAC9B,GACC,OAAO,CAAC,oBAAoB,OAAO,EAAE,CAAC;YACrC,MAAM,OAAO,GAAG;YAChB,MAAM,KAAK,GAAG;QAChB,GACC,OAAO,CAAC,oBAAoB,SAAS,EAAE,CAAC,OAAO;YAC9C,MAAM,OAAO,GAAG;YAChB,MAAM,OAAO,GAAG,OAAO,OAAO,CAAC,OAAO;YACtC,MAAM,YAAY,GAAG,OAAO,OAAO,CAAC,YAAY;YAChD,MAAM,KAAK,GAAG;QAChB,GACC,OAAO,CAAC,oBAAoB,QAAQ,EAAE,CAAC,OAAO;YAC7C,MAAM,OAAO,GAAG;YAChB,MAAM,KAAK,GAAG,OAAO,OAAO;QAC9B;IACJ;AACF;uCAEe,UAAU,OAAO","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Programming/sportsexcitement-react/src/lib/Redux/store.ts"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\r\nimport authReducer from '@/lib/Redux/auth/slices/authSlice';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: authReducer,\r\n  },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport type { TypedUseSelectorHook } from 'react-redux';\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector as TypedUseSelectorHook<RootState>;\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;AAAA;AAWA;;;;AATO,MAAM,QAAQ,CAAA,GAAA,8LAAA,CAAA,iBAAc,AAAD,EAAE;IAClC,SAAS;QACP,MAAM,qKAAA,CAAA,UAAW;IACnB;AACF;;AASO,MAAM,iBAAiB;;IAAM,OAAA,CAAA,GAAA,4JAAA,CAAA,cAAW,AAAD;AAAe;GAAhD;;QAAuB,4JAAA,CAAA,cAAW;;;AACxC,MAAM,iBAAkD,4JAAA,CAAA,cAAW","debugId":null}},
    {"offset": {"line": 147, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Programming/sportsexcitement-react/src/lib/Redux/providers.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store';\r\n\r\nexport function Providers({ children }: { children: React.ReactNode }) {\r\n  return <Provider store={store}>{children}</Provider>;\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKO,SAAS,UAAU,EAAE,QAAQ,EAAiC;IACnE,qBAAO,6LAAC,4JAAA,CAAA,WAAQ;QAAC,OAAO,+HAAA,CAAA,QAAK;kBAAG;;;;;;AAClC;KAFgB","debugId":null}}]
}